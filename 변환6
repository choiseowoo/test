현재 코드에서 `String`을 변환하고 한 줄로 결합하는 방식이 잘못되었습니다. 주된 문제는 `map.get("key")`가 항상 같은 값을 반환하는 잘못된 접근 방식과 중첩된 루프에서 `StringBuffer`를 잘못 사용하고 있기 때문입니다.

이 문제를 해결하려면 `HashMap`의 키를 올바르게 반복하면서 `StringBuffer`를 사용하여 각 키를 한 줄의 문자열로 결합해야 합니다.

다음은 수정된 코드입니다:

```java
import java.util.HashMap;
import java.util.Map;

public class HashMapExample {

    public static void main(String[] args) {
        // 예시 HashMap 생성
        Map<Long, Object> map = new HashMap<>();
        map.put(10L, "갱신");
        map.put(20L, "작성");
        map.put(30L, "삭제");

        // StringBuilder를 사용하여 Long 키를 String으로 변환하고 한 줄로 결합
        StringBuilder sb = new StringBuilder();
        for (Long key : map.keySet()) {
            if (sb.length() > 0) {
                sb.append(", ");
            }
            String code = String.valueOf(key); // Long 키를 String으로 변환
            sb.append(code);
        }
        String result = sb.toString();
        System.out.println(result); // 출력: 10, 20, 30
    }
}
```

### 설명

1. **반복문 수정**: `for (Long key : map.keySet())`를 사용하여 `HashMap`의 키를 올바르게 반복합니다.
2. **`StringBuilder` 사용**: `StringBuilder`를 사용하여 각 키를 결합합니다.
3. **조건문 추가**: `sb.length() > 0`을 사용하여 처음이 아닌 경우에 `", "`를 추가합니다.
4. **키를 문자열로 변환**: `String code = String.valueOf(key)`를 사용하여 `Long` 키를 문자열로 변환합니다.
5. **최종 문자열 출력**: 최종 문자열을 `sb.toString()`으로 변환하여 출력합니다.

이렇게 수정하면 `HashMap`의 키를 문자열로 변환하고, 원하는 대로 `10, 20, 30` 형식으로 한 줄의 문자열로 결합하여 출력할 수 있습니다.
