보통 `String` 타입의 여러 데이터를 한 줄의 문자열로 결합하여 `10, 20, 30` 형태로 출력하려면, 각 값을 `List` 또는 배열에 저장한 후 `StringBuilder` 또는 `String.join()` 메서드를 사용하여 결합할 수 있습니다.

여기 두 가지 방법을 소개합니다:

### 방법 1: StringBuilder 사용
```java
import java.util.Arrays;
import java.util.List;

public class StringJoinExample {

    public static void main(String[] args) {
        // 예시 데이터
        List<String> dataList = Arrays.asList("10", "20", "30");

        // StringBuilder를 사용하여 한 줄로 결합
        StringBuilder sb = new StringBuilder();
        for (String data : dataList) {
            if (sb.length() > 0) {
                sb.append(", ");
            }
            sb.append(data);
        }
        String result = sb.toString();
        System.out.println(result); // 출력: 10, 20, 30
    }
}
```

### 방법 2: String.join() 사용
```java
import java.util.Arrays;
import java.util.List;

public class StringJoinExample {

    public static void main(String[] args) {
        // 예시 데이터
        List<String> dataList = Arrays.asList("10", "20", "30");

        // String.join()을 사용하여 한 줄로 결합
        String result = String.join(", ", dataList);
        System.out.println(result); // 출력: 10, 20, 30
    }
}
```

### 설명
1. **예시 데이터**: `List<String>`에 문자열 데이터(`"10"`, `"20"`, `"30"`)를 저장합니다.
2. **StringBuilder 사용**: 
   - `StringBuilder`를 사용하여 각 문자열을 결합합니다.
   - `sb.length() > 0` 조건을 사용하여 첫 번째 문자열 이후에는 `", "`를 추가합니다.
3. **String.join() 사용**: 
   - `String.join(", ", dataList)`를 사용하여 `List`의 각 요소를 `", "`로 결합합니다.
   - `String.join()`은 내부적으로 `StringBuilder`를 사용하여 효율적으로 문자열을 결합합니다.

위의 두 가지 방법 중 하나를 사용하여 `String` 데이터들을 한 줄의 문자열로 결합하여 출력할 수 있습니다.
