## 출력하는 CSV 파일(ID.csv)과 해당 ID 값을 비교하는 방법

**1. 두 파일을 메모리에 로드하여 비교하기:**

**1.1 CSV 파일 읽기:**

```java
// ID.csv 파일 읽기
List<String> idList = new ArrayList<>();
try (BufferedReader reader = new BufferedReader(new FileReader("ID.csv"))) {
    String line;
    while ((line = reader.readLine()) != null) {
        idList.add(line.split(",")[0]); // 첫 번째 쉼표(,)로 분할하여 ID 추출
    }
} catch (IOException e) {
    e.printStackTrace();
}
```

**1.2 ID 값 비교:**

```java
// DB에서 ID 값 목록 가져오기
List<String> dbIdList = getDbIdList(); // DB 쿼리 실행하여 ID 목록 가져오는 메서드

// 두 ID 목록 비교
List<String> matchedIdList = new ArrayList<>(); // 일치하는 ID 목록 저장
List<String> unmatchedIdList = new ArrayList<>(); // 일치하지 않는 ID 목록 저장

for (String dbId : dbIdList) {
    if (idList.contains(dbId)) {
        matchedIdList.add(dbId);
    } else {
        unmatchedIdList.add(dbId);
    }
}

// 비교 결과 처리
System.out.println("일치하는 ID 목록: " + matchedIdList);
System.out.println("일치하지 않는 ID 목록: " + unmatchedIdList);
```

**1.2.1 `getDbIdList()` 메서드 예시:**

```java
private List<String> getDbIdList() {
    List<String> idList = new ArrayList<>();

    // DB 연결 및 쿼리 실행
    Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/database_name", "username", "password");
    Statement stmt = conn.createStatement();
    String sql = "SELECT id FROM member";
    ResultSet rs = stmt.executeQuery(sql);

    while (rs.next()) {
        idList.add(rs.getString("id"));
    }

    // DB 연결 종료
    rs.close();
    stmt.close();
    conn.close();

    return idList;
}
```

**2. 두 파일을 스트리밍 방식으로 비교하기:**

**2.1 CSV 파일 스트리밍:**

```java
// ID.csv 파일 스트리밍
try (Stream<String> lines = Files.lines(Paths.get("ID.csv"))) {
    lines.forEach(line -> {
        String id = line.split(",")[0]; // 첫 번째 쉼표(,)로 분할하여 ID 추출
        // ID 비교 및 처리 로직
    });
} catch (IOException e) {
    e.printStackTrace();
}
```

**2.2 ID 값 스트리밍:**

```java
// DB에서 ID 값 스트리밍
List<String> dbIdList = getDbIdList(); // DB 쿼리 실행하여 ID 목록 가져오는 메서드

// 두 ID 스트림 비교
dbIdList.stream()
    .filter(dbId -> !idList.contains(dbId)) // ID.csv에 없는 ID만 필터링
    .forEach(dbId -> System.out.println("일치하지 않는 ID: " + dbId)); // 일치하지 않는 ID 출력
```

**3. Apache Commons CSV 라이브러리 사용하기:**

```java
import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVParser;
import org.apache.commons.csv.CSVRecord;

public class CSVComparison {

    public static void main(String[] args) throws IOException {
        // ID.csv 파일 파싱
        CSVParser idCsvParser = CSVFormat.DEFAULT.parse(new FileReader("ID.csv"));

        // DB에서 ID 값 목록 가져오기
        List<String> dbIdList = getDbIdList();

        // 두 ID 목록 비교
        for (CSVRecord idRecord : idCsvParser) {
            String id = idRecord.get(0); // 첫 번째 필드(인덱스 0)에서 ID 추출
            if (!dbIdList.contains(id)) {
                System.out.println("일치하지 않는 ID: " + id);
            }
        }

        // ID.csv 파일 및 DB 연결 닫기
        idCsvParser.close();
