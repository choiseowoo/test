자바 프로그램에서 배치 실행 시 상대 경로를 사용하여 다른 폴더에 CSV 파일을 출력하는 방법을 설명하겠습니다. 예를 들어, `c:/test/bat` 폴더에서 실행하고 `c:/test/dat` 폴더에 CSV 파일을 출력한다고 가정하겠습니다. 상대 경로를 사용하여 이러한 작업을 수행하려면 `File` 클래스를 사용하여 파일의 경로를 지정할 수 있습니다.

다음은 예시 코드입니다:

```java
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

public class CsvWriterExample {

    public static void main(String[] args) {
        // 현재 작업 디렉토리 (bat 폴더 위치에서 실행한다고 가정)
        String currentDirectory = System.getProperty("user.dir");

        // 상대 경로를 사용하여 dat 폴더 내의 파일 경로 생성
        String relativePath = "../dat/output.csv"; // 상대 경로
        File outputFile = new File(currentDirectory, relativePath);

        // CSV 파일 작성
        try (FileWriter writer = new FileWriter(outputFile)) {
            writer.append("Column1,Column2,Column3\n");
            writer.append("Data1,Data2,Data3\n");
            System.out.println("CSV 파일이 성공적으로 생성되었습니다: " + outputFile.getAbsolutePath());
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
```

위 코드에서 중요한 부분은 상대 경로를 사용하는 것입니다. `../dat/output.csv`는 현재 작업 디렉토리에서 한 단계 위로 이동한 다음 `dat` 폴더에 `output.csv` 파일을 생성합니다. `System.getProperty("user.dir")`를 사용하여 현재 작업 디렉토리를 가져오고, 이를 기반으로 `File` 객체를 생성하여 상대 경로를 지정합니다.

다음 명령어를 사용하여 bat 폴더에서 자바 프로그램을 실행할 수 있습니다:
```sh
cd c:/test/bat
java CsvWriterExample
```

이렇게 하면 `c:/test/dat` 폴더에 `output.csv` 파일이 생성됩니다.
