자바에서 배치 실행 시 상대 경로를 사용하여 다른 폴더에 CSV 파일을 출력하는 방법은 여러 가지가 있습니다. 

**1. `java.io.File` 또는 `FileOutputStream` 객체 사용:**

- `java.io.File` 객체를 사용하여 상대 경로를 지정하고 `FileOutputStream` 객체를 생성하여 CSV 파일을 출력할 수 있습니다. 예를 들어, 다음과 같이 코드를 작성할 수 있습니다.

```java
String relativePath = "dat/output.csv"; // 상대 경로
File file = new File(relativePath); // 상대 경로를 기반으로 File 객체 생성
FileOutputStream fos = new FileOutputStream(file); // FileOutputStream 객체 생성

// CSV 파일 출력 코드 작성
```

**2. `Path` 인터페이스 사용:**

- Java 7 이상에서는 `Path` 인터페이스를 사용하여 상대 경로를 지정하고 CSV 파일을 출력할 수 있습니다. 예를 들어, 다음과 같이 코드를 작성할 수 있습니다.

```java
String relativePath = "dat/output.csv"; // 상대 경로
Path path = Paths.get(relativePath); // Path 객체 생성
Files.newOutputStream(path); // Path 객체를 사용하여 FileOutputStream 객체 생성

// CSV 파일 출력 코드 작성
```

**3. `URL` 객체 사용:**

- `URL` 객체를 사용하여 상대 경로를 지정하고 CSV 파일을 출력할 수 있습니다. 예를 들어, 다음과 같이 코드를 작성할 수 있습니다.

```java
String relativePath = "dat/output.csv"; // 상대 경로
URL url = new URL(relativePath); // URL 객체 생성
URLConnection conn = url.openConnection(); // URLConnection 객체 생성
OutputStream os = conn.getOutputStream(); // OutputStream 객체 생성

// CSV 파일 출력 코드 작성
```

**4. 프레임워크 사용:**

- Spring Batch와 같은 프레임워크를 사용하는 경우, 상대 경로를 설정하여 CSV 파일을 출력할 수 있습니다. 프레임워크에 따라 다양한 방식으로 설정이 가능하며, 문서를 참고하시기 바랍니다.

**예시 코드:**

```java
// c:/test/bat 폴더에 있는 배치 파일에서 c:/test/dat 폴더에 CSV 파일 출력

String relativePath = "../dat/output.csv"; // 상대 경로

// FileOutputStream 객체 생성
FileOutputStream fos = new FileOutputStream(relativePath);

// CSV 파일 출력 코드 작성
```

**참고:**

- 상대 경로를 사용할 때, 기준 경로는 현재 작업 디렉터리입니다. 
- 다른 폴더를 기준으로 상대 경로를 지정하려면, `../` 연산자를 사용하여 상위 폴더를 이동할 수 있습니다.
- 예시 코드는 기본적인 방법을 보여주는 것으로, 실제 상황에 따라 적절하게 수정해야 합니다.


