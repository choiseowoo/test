DTO에 설정한 페이징 정보가 `null`이 되는 문제는, **페이징 값을 0일 때 처리하지 않기 때문에 DTO가 초기화되지 않는 것** 때문일 가능성이 커.  

### **🔍 현재 문제 상황 정리**
- 페이징 값이 `0`이면 `null`을 리턴하도록 처리함.
- 그런데 이렇게 하면 **DTO 자체가 `null`이 되어서** 이후 코드에서 DTO 내부의 필드도 모두 `null`이 되어버림.
- 해결 방법: **DTO를 `null`로 리턴하지 않고, 최소한 기본 값을 설정한 상태로 리턴하는 것.**

---

## **✅ 해결 방법: 기본 값이 설정된 DTO 리턴**
페이징 값이 `0`일 때도 DTO는 유지하고, **페이징 관련 필드는 기본 값으로 설정**한 후 리턴하면 문제를 해결할 수 있음.

### **🔹 예제 코드 (수정 전 - 문제 발생 코드)**
```java
public PageDTO getPageInfo(int page) {
    if (page == 0) {
        return null;  // ❌ DTO 자체가 null이 되어서 이후 로직에서 NPE 발생 가능
    }

    PageDTO dto = new PageDTO();
    dto.setPageNumber(page);
    dto.setPageSize(10);
    return dto;
}
```
이렇게 하면 `page == 0`일 때 **DTO 자체가 `null`이 되기 때문에** 이후 DTO를 사용하는 곳에서 `NullPointerException(NPE)`이 발생할 수 있음.

---

### **🔹 해결 방법 (DTO를 항상 리턴)**
```java
public PageDTO getPageInfo(int page) {
    PageDTO dto = new PageDTO();

    if (page == 0) {
        dto.setPageNumber(1); // 기본 페이지 번호 설정
        dto.setPageSize(10);  // 기본 페이지 크기 설정
        dto.setTotalPages(0); // 필요하면 0으로 설정
        return dto;           // ✔️ null을 반환하지 않음
    }

    dto.setPageNumber(page);
    dto.setPageSize(10);
    return dto;
}
```
✔️ 이렇게 하면 `page == 0`일 때도 **DTO는 `null`이 아니고 기본 값이 있는 객체가 유지됨.**  
✔️ **이후 DTO를 사용하는 코드에서도 `NPE`가 발생하지 않음.**

---

### **🔹 또 다른 해결 방법 (Optional 사용)**
Java 8 이상이라면 `Optional`을 활용해서 DTO가 `null`인 경우를 더 명확하게 처리할 수도 있음.

```java
public Optional<PageDTO> getPageInfo(int page) {
    if (page == 0) {
        return Optional.empty(); // ❌ null 대신 Optional.empty() 반환
    }

    PageDTO dto = new PageDTO();
    dto.setPageNumber(page);
    dto.setPageSize(10);
    return Optional.of(dto);
}
```
이렇게 하면 **DTO가 없을 때 `null`이 아니라 `Optional.empty()`를 반환하므로**  
DTO를 사용하는 쪽에서 `if (dto.isPresent())`로 안전하게 처리할 수 있음.

---

## **📌 결론**
✅ **DTO를 `null`로 리턴하지 말고 기본 값을 가진 상태로 리턴하자.**  
✅ **Java 8 이상이라면 `Optional`을 활용하는 것도 방법.**  
이렇게 하면 **페이징 값이 `0`일 때도 DTO 필드가 유지되고, 이후 로직에서 `NPE` 없이 안전하게 처리할 수 있음.**
