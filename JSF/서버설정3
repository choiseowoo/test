# JSF (Jakarta Faces) 설정 문제 분석

`"Cannot invoke 'jakarta.faces.context.FacesContext.getExternalContext()' because 'context' is null"` 오류는 JSF 컨텍스트가 초기화되지 않았음을 나타냅니다. 현재 설정과 라이브러리를 분석해 보겠습니다.

## 문제 원인 및 해결 방안

### 1. 라이브러리 충돌 문제
- **문제점**: `jakarta.faces-api-4.0.0.jar`(API)와 `jakarta.faces-4.1.3.jar`(구현체) 버전이 불일치
- **해결책**: 
  ```xml
  <!-- 권장 조치 -->
  <dependency>
    <groupId>jakarta.faces</groupId>
    <artifactId>jakarta.faces-api</artifactId>
    <version>4.1</version> <!-- 4.1.3과 호환되는 API 버전 -->
    <scope>provided</scope>
  </dependency>
  <dependency>
    <groupId>org.glassfish</groupId>
    <artifactId>jakarta.faces</artifactId>
    <version>4.1.3</version> <!-- 구현체 -->
  </dependency>
  ```

### 2. 누락된 필수 라이브러리
- **필요한 추가 라이브러리**:
  - EL 구현체 (예: `jakarta.el-api` 및 구현체)
  - CDI 구현체 (Weld 등)
  - JSTL (선택적)

### 3. web.xml 설정 보완
```xml
<context-param>
  <param-name>jakarta.faces.PROJECT_STAGE</param-name>
  <param-value>Development</param-value>
</context-param>
<context-param>
  <param-name>jakarta.faces.FACELETS_REFRESH_PERIOD</param-name>
  <param-value>1</param-value>
</context-param>
```

### 4. 서버 호환성 확인
- 사용 중인 서버(Jetty, Tomcat, WildFly 등)가 Jakarta EE 10을 완전히 지원하는지 확인
- Tomcat의 경우 추가 모듈 설치 필요

## 권장 조치 단계

1. **의존성 정리**:
   - Maven/Gradle을 사용해 버전 일관성 유지
   - 불필요한 라이브러리(예: log4j 1.x) 제거

2. **서버 재시작**:
   - 변경 사항 적용을 위해 서버 완전히 재시작

3. **최소 테스트 페이지**:
   ```xhtml
   <!DOCTYPE html>
   <html xmlns="http://www.w3.org/1999/xhtml"
         xmlns:h="http://xmlns.jcp.org/jsf/html">
   <h:head>
       <title>JSF Test</title>
   </h:head>
   <h:body>
       <h:outputText value="JSF is working!"/>
   </h:body>
   </html>
   ```

4. **로그 확인**:
   - 서버 시작 시 `FacesServlet` 초기화 메시지 확인

이러한 조치 후에도 문제가 지속된다면 서버 로그의 전체 스택 트레이스를 제공해 주시면 더 정확한 진단이 가능합니다.
