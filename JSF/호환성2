WildFly를 사용한다면 **GlassFish의 `jakarta.faces` 라이브러리를 직접 추가할 필요가 없습니다**.  
WildFly 31에는 기본적으로 **Jakarta EE 10**이 포함되어 있으며, **Jakarta Faces 4.x(JSF 4.x)**가 이미 내장되어 있습니다.  

---

## **⚠ 문제 원인**
Eclipse에서 **JSF 2.3**을 선택했는데, WildFly는 기본적으로 **Jakarta Faces 4.x (JSF 4.0 이상)**을 사용하기 때문에 **네임스페이스(`javax.faces` → `jakarta.faces`) 충돌**이 발생합니다.

---

## **✅ 해결 방법**
### **① `javax.faces` → `jakarta.faces`로 변경 (필수)**
**WildFly 31에서 JSF 4.x를 사용하려면** 기존 코드에서 **`javax.faces`를 `jakarta.faces`로 변경**해야 합니다.

#### **Java 코드 변경**
```java
// 변경 전 (JSF 2.3)
import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.context.FacesContext;

// 변경 후 (JSF 4.x)
import jakarta.faces.bean.ManagedBean;
import jakarta.faces.bean.SessionScoped;
import jakarta.faces.context.FacesContext;
```

#### **faces-config.xml 변경**
```xml
<faces-config xmlns="https://jakarta.ee/xml/ns/jakartaee"
              version="4.0">
</faces-config>
```

#### **XHTML 변경**
```xml
<html xmlns:h="http://jakarta.faces/html"
      xmlns:f="http://jakarta.faces/core">
```

---

### **② `pom.xml`에서 JSF API 제거 (WildFly 기본 내장)**
WildFly는 **Jakarta Faces 4.x**가 포함되어 있으므로, **추가적인 JSF 라이브러리를 `pom.xml`에 명시하면 안 됩니다**.  
아래처럼 **JSF 관련 의존성을 제거**하세요.

#### **pom.xml (불필요한 JSF API 제거)**
```xml
<dependencies>
    <!-- WildFly에 내장된 JSF를 사용하므로, JSF API 추가 금지 -->
</dependencies>
```

> **⚠ 주의**: 만약 `javax.faces-api` 또는 `jakarta.faces` 라이브러리를 추가했다면, **모두 삭제**해야 합니다.

---

### **③ WildFly 31에서 Jakarta Faces 4.x(JSF 4.x) 확인**
WildFly 31에서는 **기본적으로 Jakarta Faces 4.x(JSF 4.0 이상)가 포함**되어 있습니다.  
WildFly가 올바르게 설정되었는지 확인하려면 **관리 콘솔** 또는 `module.xml`을 확인하세요.

#### **WildFly에서 JSF 버전 확인**
1. **WildFly 관리 콘솔 접속** (`http://localhost:9990`)
2. **Configuration → Subsystems → Web (Undertow) → JSF 설정 확인**
3. `module.xml` 확인 (`WILDFLY_HOME/modules/system/layers/base/jakarta/faces/main/module.xml`)

---

### **④ WildFly가 `javax.faces`를 요청하는 경우 해결 방법**
만약 WildFly가 여전히 `javax.faces`를 찾는다면, **배포할 때 `jboss-deployment-structure.xml`을 추가**해서 **내장 JSF만 사용하도록 설정**하세요.

#### **`jboss-deployment-structure.xml` 추가**
📂 **`WEB-INF/jboss-deployment-structure.xml`**
```xml
<jboss-deployment-structure>
    <deployment>
        <exclude-subsystems>
            <subsystem name="jsf" />
        </exclude-subsystems>
    </deployment>
</jboss-deployment-structure>
```
> 이 설정을 통해 **외부 JSF 라이브러리와 충돌을 방지**하고, **WildFly의 기본 JSF 4.x만 사용**하게 됩니다.

---

## **🚀 결론**
1. **기존 `javax.faces`를 `jakarta.faces`로 변경** (필수)
2. **JSF 관련 `pom.xml` 의존성 제거** (WildFly에 기본 포함됨)
3. **WildFly에서 Jakarta Faces 4.x가 활성화되어 있는지 확인**
4. **필요하면 `jboss-deployment-structure.xml`로 불필요한 JSF API 제거**

이렇게 하면 **WildFly 31에서 Jakarta Faces 4.x를 정상적으로 사용할 수 있습니다**.
