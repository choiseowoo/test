테스트 환경에서 로그인 없이 `index.xhtml`에서 `xxxx01.xhtml`로 자동 이동하는 경우, `SESSIONKEY_SESSION` 값을 하드코딩해서 세션에 저장하려면 **JSF의 `preRenderView` 이벤트를 활용**하거나, **JS에서 직접 세션 값을 설정**하는 방법이 있습니다.  

---

### **📌 방법 1: JSF에서 `preRenderView` 이벤트를 사용해 세션 값 설정**
`index.xhtml`에서 `preRenderView` 이벤트를 활용해 세션 값을 저장하고, 이후 페이지에서 사용할 수 있습니다.

#### ✅ **1) `SessionManager` 클래스 생성** (세션 값 저장/조회)
```java
import jakarta.faces.context.FacesContext;
import jakarta.servlet.http.HttpSession;
import java.util.HashMap;
import java.util.Map;

public class SessionManager {
    private static final String SESSIONKEY_SESSION = "framework.session";

    // 세션에 하드코딩된 값 저장
    public static void saveToSession() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        if (facesContext != null) {
            HttpSession session = (HttpSession) facesContext.getExternalContext().getSession(true);

            Map<String, Object> sessionData = new HashMap<>();
            sessionData.put("USER_TOKEN", "testToken");
            sessionData.put("USER_ID", "testUser");
            sessionData.put("USER_ROLE", "admin");

            session.setAttribute(SESSIONKEY_SESSION, sessionData);
            System.out.println("세션 저장 완료: " + sessionData);
        }
    }

    // 세션에서 값 가져오기
    public static Map<String, Object> getSessionData() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        if (facesContext != null) {
            HttpSession session = (HttpSession) facesContext.getExternalContext().getSession(false);
            if (session != null) {
                return (Map<String, Object>) session.getAttribute(SESSIONKEY_SESSION);
            }
        }
        return null;
    }
}
```

---

#### ✅ **2) `index.xhtml`에서 `preRenderView`로 세션 설정 후 페이지 이동**
```xml
<f:metadata>
    <f:event type="preRenderView" listener="#{sessionBean.saveToSession}" />
</f:metadata>

<h:body>
    <h:outputScript>
        window.onload = function() {
            window.location.href = 'xxxx01.xhtml';
        };
    </h:outputScript>
</h:body>
```
✅ **설명**  
- `<f:metadata>` 안에서 **`preRenderView` 이벤트를 사용하여 `saveToSession()`을 실행**  
  → 즉, `index.xhtml`이 렌더링되기 전에 **세션 값이 자동으로 저장됨**  
- 그 후 **JavaScript의 `window.onload` 이벤트에서 `xxxx01.xhtml`로 이동**  
- 이 방법을 사용하면 **다음 페이지(`xxxx01.xhtml`)에서도 세션에 저장된 값을 사용할 수 있음**.

---

### **📌 방법 2: JavaScript로 세션 값을 설정 (비추천)**
JavaScript에서는 **서버 세션(`HttpSession`)을 직접 수정할 수 없지만**, **AJAX를 사용해 서블릿을 호출하여 세션 값을 설정**할 수 있습니다.  
(단, 서버 측 코드가 필요함)

#### ✅ **1) 세션 값을 설정하는 서블릿 (`SetSessionServlet.java`) 추가**
```java
import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

public class SetSessionServlet extends HttpServlet {
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        HttpSession session = request.getSession(true);

        Map<String, Object> sessionData = new HashMap<>();
        sessionData.put("USER_TOKEN", "testToken");
        sessionData.put("USER_ID", "testUser");
        sessionData.put("USER_ROLE", "admin");

        session.setAttribute("framework.session", sessionData);
        response.getWriter().write("Session set successfully");
    }
}
```
✅ **설명**  
- `/setSession` 경로로 AJAX 요청을 보내면 **서버에서 세션 값을 저장**하는 서블릿  
- 이후 페이지(`xxxx01.xhtml`)에서도 세션 값 사용 가능  

---

#### ✅ **2) JavaScript에서 AJAX로 세션 값 설정 후 페이지 이동**
```xml
<h:outputScript>
    window.onload = function() {
        fetch('setSession', { method: 'GET' })
            .then(response => response.text())
            .then(data => {
                console.log(data);
                window.location.href = 'xxxx01.xhtml';
            })
            .catch(error => console.error('Error:', error));
    };
</h:outputScript>
```
✅ **설명**  
- **AJAX를 이용해 `/setSession` 요청**을 보냄  
- **서버에서 세션 값을 설정한 후 `xxxx01.xhtml`로 이동**  
- 이 방법은 `Servlet`이 필요하기 때문에 **JSF만으로 해결하는 것보다 번거로울 수 있음**.

---

### **📌 결론**
✅ **테스트 환경에서 가장 간단한 방법**  
☑️ **JSF의 `preRenderView`에서 `saveToSession()` 실행 후 페이지 이동하는 방법**  
☑️ **JavaScript에서 `window.location.href = 'xxxx01.xhtml'`로 자동 이동**  
☑️ **다음 페이지에서도 `SESSIONKEY_SESSION` 값을 사용 가능**  

이제 `xxxx01.xhtml`에서도 아래처럼 세션 값을 사용할 수 있습니다.
```java
Map<String, Object> sessionData = SessionManager.getSessionData();
System.out.println("세션 데이터: " + sessionData);
```

이 방식이 가장 편리하면서도 추가적인 서블릿이 필요 없어서 추천됩니다!
