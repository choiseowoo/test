홍길동을 선택하고 "선택" 버튼을 눌렀을 때 `null`이 표시되고, 강감찬을 선택하면 정상적으로 `003`이 표시된다면, **라디오 버튼 값이 JavaBean(`UserBean`)의 `selectedUser`에 제대로 반영되지 않는 문제**일 가능성이 높습니다.  

---

## ✅ **가능한 원인 및 해결 방법**
### **1. `h:selectOneRadio`에서 `value`가 Bean과 제대로 연결되지 않음**  
- `h:selectOneRadio`는 기본적으로 **객체(데이터 모델)**과 바인딩하여 값을 설정하는데, 값이 변경될 때 `selectedUser`에 제대로 저장되지 않는 경우가 있음.  
- 특정 데이터에서만 정상적으로 동작하는 경우, **첫 번째 항목이 `selectedUser`에 반영되지 않거나, 변경 사항이 적용되지 않는 문제**일 가능성이 큼.  

#### 🔹 **해결 방법: `f:ajax` 추가하여 강제 업데이트**
```xhtml
<h:selectOneRadio id="radio" value="#{userBean.selectedUser}">
    <f:selectItem itemValue="#{user.name}/#{user.code}/#{user.email}" />
    <f:ajax event="change" render="selectedUserValue" />
</h:selectOneRadio>
```
✔ `f:ajax`를 추가하여 **값이 변경될 때마다 `selectedUser`가 즉시 업데이트되도록 설정**  
✔ **선택한 값이 서버 모델에 즉시 반영되는지 확인**

---

### **2. JavaBean에서 `selectedUser`의 Getter/Setter가 제대로 동작하지 않음**  
- `selectedUser`가 `null`로 설정될 가능성이 있음.  
- JavaBean에서 `selectedUser`의 **Setter 메서드가 정상적으로 호출되는지 확인 필요**  

#### 🔹 **해결 방법: `System.out.println()`으로 값 확인**
```java
public void setSelectedUser(String selectedUser) {
    System.out.println("선택된 사용자: " + selectedUser); // 콘솔 출력
    this.selectedUser = selectedUser;
}
```
✅ **콘솔에서 `null`이 찍히는지 확인**  

---

### **3. XHTML에서 `h:form`이 중복되거나 잘못된 위치에 있음**  
- `<h:form>`이 여러 개 존재하는 경우, 선택한 값이 다른 폼으로 넘어갈 수 있음.  
- `h:selectOneRadio`와 `h:commandButton`이 **같은 `<h:form>` 내부에 있는지 확인**해야 함.  

#### 🔹 **해결 방법: `h:form` 내부에 모든 요소 포함**
```xhtml
<h:form id="userForm">
    <h:dataTable value="#{userBean.userList}" var="user" border="1">
        <h:column>
            <h:selectOneRadio id="radio" value="#{userBean.selectedUser}">
                <f:selectItem itemValue="#{user.name}/#{user.code}/#{user.email}" />
                <f:ajax event="change" render="selectedUserValue" />
            </h:selectOneRadio>
        </h:column>
        <h:column> #{user.name} </h:column>
        <h:column> #{user.code} </h:column>
        <h:column> #{user.email} </h:column>
    </h:dataTable>

    <h:outputText id="selectedUserValue" value="선택된 사용자: #{userBean.selectedUser}" />

    <h:commandButton value="선택" onclick="sendToParent()" />
</h:form>
```
✅ **`h:form` 내부에 모든 요소 포함**  

---

### **4. JavaScript에서 `selectedUser` 값이 올바르게 가져와지는지 확인**
현재 `sendToParent()` 함수에서 `selectedUser` 값을 **출력하여 확인**  

#### 🔹 **JavaScript에서 콘솔 로그로 값 확인**
```javascript
function sendToParent() {
    let selectedUser = document.getElementById("userForm:selectedUserValue").innerText.replace("선택된 사용자: ", "");

    console.log("전달될 값:", selectedUser); // 디버깅용 출력

    if (!selectedUser.trim()) {
        alert("사용자를 선택하세요.");
        return;
    }

    window.opener.document.getElementById("parentInput").value = selectedUser;
    window.close();
}
```
✅ **F12 (개발자 도구) → Console에서 `전달될 값:`이 정상적으로 출력되는지 확인**  

---

## ✅ **결론**
- `f:ajax`를 사용하여 **라디오 버튼 값이 즉시 `selectedUser`에 반영되도록 처리**
- `System.out.println()`을 활용하여 **JavaBean의 `selectedUser` 값이 정상적으로 반영되는지 확인**
- `h:form`이 중복되지 않도록 **라디오 버튼과 "선택" 버튼이 같은 폼에 있는지 확인**
- `console.log()`를 통해 **JavaScript에서 올바른 값이 전달되는지 확인**  

이렇게 수정하면 **어떤 사용자를 선택하든 정상적으로 값이 넘어갈 것**입니다! 🚀
