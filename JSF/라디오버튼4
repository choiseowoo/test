값이 제대로 선택되고 리턴되는지 확인하려면 **1️⃣ 선택한 값이 콘솔에 출력되도록 로그 추가**, **2️⃣ 부모 창에서 값을 화면에 표시**하면 돼요.  

---

## **🔹 1️⃣ 팝업창에서 선택한 값이 제대로 들어오는지 확인**  
**팝업창에서 선택한 값을 확인하려면 `onclick`에서 alert 창으로 먼저 확인**  

### **✅ 팝업창 (userSearch.xhtml)**
```xml
<h:form>
    <h:dataTable value="#{userBean.users}" var="user">
        <h:column>
            <f:facet name="header">선택</f:facet>
            <h:selectOneRadio value="#{userBean.selectedUser}">
                <f:selectItem itemValue="#{user.userid}-#{user.username}" itemLabel="선택" />
            </h:selectOneRadio>
        </h:column>

        <h:column>
            <f:facet name="header">ID</f:facet>
            #{user.userid}
        </h:column>

        <h:column>
            <f:facet name="header">이름</f:facet>
            #{user.username}
        </h:column>
    </h:dataTable>

    <h:commandButton value="선택"
        action="#{userBean.sendSelectedUser}" 
        onclick="showSelectedUser(); return false;" />
</h:form>

<script>
    function showSelectedUser() {
        let selected = document.querySelector('input[name="userBean:selectedUser"]:checked');
        if (selected) {
            alert("선택된 값: " + selected.value);
            window.opener.receiveUserData(selected.value);
            window.close();
        } else {
            alert("사용자를 선택하세요.");
        }
    }
</script>
```
### **📌 설명**
✔️ **선택한 `userid username`을 `alert()`로 먼저 출력** → 값이 정상적으로 선택되었는지 확인  
✔️ **부모 창으로 데이터 넘기기 전 `alert()`로 확인 후 `window.close();`**  

---

## **🔹 2️⃣ 부모 창에서 제대로 값이 표시되는지 확인**  
부모 창에서 값을 받아와서 **HTML 요소에 추가적으로 표시**  

### **✅ 부모창 (parent.xhtml)**
```xml
<h:form id="form">
    <h:outputLabel id="selectedUserLabel" value="#{userBean.selectedUserLabel}" />
    <h:commandButton value="사용자 선택" onclick="openUserPopup()" />
    
    <h:outputText id="debugOutput" value="" style="color: red; font-weight: bold;" />

    <script>
        function openUserPopup() {
            window.open("userSearch.xhtml", "UserSearch", "width=600,height=400");
        }

        function receiveUserData(data) {
            let label = document.getElementById('form:selectedUserLabel');
            let debugOutput = document.getElementById('form:debugOutput');

            label.innerText = "선택된 사용자: " + data; 
            debugOutput.innerText = "디버깅 값: " + data;  // 추가적으로 디버깅 출력
        }
    </script>
</h:form>
```
### **📌 설명**
✔️ `h:outputText` 추가해서 선택된 값을 **디버깅용으로 화면에 표시**  
✔️ 선택된 값이 **정상적으로 부모창으로 전달되는지 확인**  

---

## **🔹 3️⃣ Java Bean에서도 값이 정상적으로 들어오는지 확인**  
Java Bean에서 **콘솔에 로그를 남겨서 값이 정상적으로 들어오는지 확인**  

```java
@ManagedBean
@ViewScoped
public class UserBean {
    private List<User> users;
    private String selectedUser;  // "userid-username" 형식
    private String selectedUserLabel;

    public void sendSelectedUser() {
        if (selectedUser != null) {
            this.selectedUserLabel = selectedUser;
            System.out.println("✅ 선택된 값: " + selectedUser);
        } else {
            System.out.println("❌ 선택된 값이 없음");
        }
    }

    // Getter & Setter
    public String getSelectedUser() { return selectedUser; }
    public void setSelectedUser(String selectedUser) { 
        this.selectedUser = selectedUser; 
        System.out.println("📌 setter 호출됨 - 값: " + selectedUser);
    }

    public String getSelectedUserLabel() { return selectedUserLabel; }
    public void setSelectedUserLabel(String selectedUserLabel) { this.selectedUserLabel = selectedUserLabel; }
}
```
### **📌 설명**
✔️ `System.out.println("✅ 선택된 값: " + selectedUser);`  
   → 콘솔에서 값이 제대로 들어오는지 확인  
✔️ `setter`에서 `System.out.println("📌 setter 호출됨 - 값: " + selectedUser);`  
   → 값이 정상적으로 `selectedUser`에 들어오는지 확인  

---

## **🔹 최종 확인 방법**
1️⃣ **팝업 창에서 값 선택 후 `alert()`로 확인**  
2️⃣ **부모 창에서 `label` 및 `outputText`로 값 확인**  
3️⃣ **Java Bean에서 `System.out.println()`으로 로그 확인**  

이제 값이 제대로 전달되는지 쉽게 디버깅할 수 있어요! 🚀
