### **📌 검색 버튼을 눌러야 "선택" 버튼이 활성화되는 기능**  
✅ **구현할 기능**  
- **초기 상태:** "선택" 버튼은 비활성화 (disabled) 상태  
- **검색 버튼 클릭 후:** 데이터가 검색되어 표시되면 "선택" 버튼 활성화  
- **JSF만 사용한 방법과 JavaScript 활용한 방법 제공**  

---

## **✅ 1️⃣ JSF만 사용한 방법 (`rendered` 속성 활용)**  
📌 **JSF의 `rendered` 속성을 사용하여 검색 실행 후 버튼을 표시**  
```xml
<h:form>
    <!-- 🔍 검색 조건 입력 -->
    <h:panelGrid columns="2">
        <h:outputLabel for="name" value="유저 이름:" />
        <h:inputText id="name" value="#{userBean.name}" />

        <h:outputLabel for="groupcode" value="그룹 코드:" />
        <h:inputText id="groupcode" value="#{userBean.groupcode}" />

        <h:outputLabel for="groupname" value="그룹 명:" />
        <h:inputText id="groupname" value="#{userBean.groupname}" />

        <h:commandButton value="검색" action="#{userBean.search}" />
    </h:panelGrid>

    <!-- 📋 유저 목록 테이블 -->
    <h:dataTable value="#{userBean.pagedList}" var="user">
        <h:column>
            <f:facet name="header">ID</f:facet>
            #{user.id}
        </h:column>
        <h:column>
            <f:facet name="header">이름</f:facet>
            #{user.name}
        </h:column>
        <h:column>
            <f:facet name="header">그룹 코드</f:facet>
            #{user.groupcode}
        </h:column>
        <h:column>
            <f:facet name="header">그룹 명</f:facet>
            #{user.groupname}
        </h:column>
    </h:dataTable>

    <!-- 📌 "선택" 버튼 (검색 후 활성화) -->
    <h:commandButton value="선택" action="#{userBean.selectUser}" rendered="#{not empty userBean.pagedList}" />
</h:form>
```
✔ **설명:**  
- `rendered="#{not empty userBean.pagedList}"` → 검색 결과가 있을 때만 버튼이 표시됨  
- 검색 버튼을 클릭해야 데이터가 표시되므로, "선택" 버튼도 검색 후 활성화됨  

---

## **✅ 2️⃣ JavaScript로 "disabled" 상태 변경**  
📌 **초기에는 비활성화, 검색 버튼 클릭 후 활성화**  
```xml
<h:form id="userForm">
    <!-- 🔍 검색 조건 입력 -->
    <h:panelGrid columns="2">
        <h:outputLabel for="name" value="유저 이름:" />
        <h:inputText id="name" value="#{userBean.name}" />

        <h:outputLabel for="groupcode" value="그룹 코드:" />
        <h:inputText id="groupcode" value="#{userBean.groupcode}" />

        <h:outputLabel for="groupname" value="그룹 명:" />
        <h:inputText id="groupname" value="#{userBean.groupname}" />

        <h:commandButton value="검색" action="#{userBean.search}" onclick="enableSelectButton()" />
    </h:panelGrid>

    <!-- 📋 유저 목록 테이블 -->
    <h:dataTable value="#{userBean.pagedList}" var="user">
        <h:column>
            <f:facet name="header">ID</f:facet>
            #{user.id}
        </h:column>
        <h:column>
            <f:facet name="header">이름</f:facet>
            #{user.name}
        </h:column>
        <h:column>
            <f:facet name="header">그룹 코드</f:facet>
            #{user.groupcode}
        </h:column>
        <h:column>
            <f:facet name="header">그룹 명</f:facet>
            #{user.groupname}
        </h:column>
    </h:dataTable>

    <!-- 📌 "선택" 버튼 (초기에는 비활성화) -->
    <h:commandButton id="selectButton" value="선택" action="#{userBean.selectUser}" disabled="true" />

    <!-- ✅ JavaScript 추가 -->
    <script>
        function enableSelectButton() {
            setTimeout(() => {
                document.getElementById("userForm:selectButton").disabled = false;
            }, 500);
        }
    </script>
</h:form>
```
✔ **설명:**  
- **초기 상태:** `<h:commandButton disabled="true" />` 로 "선택" 버튼 비활성화  
- **검색 버튼 클릭 시:** `onclick="enableSelectButton()"` 실행  
- **JavaScript가 실행되어 버튼 활성화** (`document.getElementById("userForm:selectButton").disabled = false;`)  

---

## **✅ 결론**
| 방법 | 특징 |
|------|------|
| **JSF `rendered` 속성 활용** | 검색 결과가 없으면 버튼이 표시되지 않음. JavaScript 없이 해결 가능 |
| **JavaScript로 disabled 변경** | 버튼이 화면에 항상 존재하고, 검색 후에 활성화됨 |

👉 **JSF만으로 해결하고 싶으면 `rendered` 사용**,  
👉 **버튼이 항상 있어야 하고 검색 후 활성화하려면 JavaScript 방식 사용**  

필요한 부분 있으면 더 알려줘!
