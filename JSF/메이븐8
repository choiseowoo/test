Eclipse에서 `common-tool`을 `User` 프로젝트에 **수동으로 추가한 후 WildFly 실행 시 WAR 파일에서 에러 발생**하는 문제를 해결하려면 다음을 확인해야 합니다.  

---

## **1. WAR 파일이 정상적으로 생성되었는지 확인**
### **1) Eclipse에서 `User` 프로젝트를 클린 빌드**  
```sh
mvn clean package
```
✅ `target/mdms2-0.0.1-SNAPSHOT.war` 파일이 정상적으로 생성되었는지 확인.  

### **2) `common-tool` 클래스가 포함되지 않았는지 확인**
`common-tool` 프로젝트를 수동으로 추가했기 때문에 **WAR 파일 내에 `common-tool`의 클래스가 포함되지 않을 가능성이 있음.**  

WAR 파일이 정상적으로 포함하고 있는지 확인:  
```sh
jar tf target/mdms2-0.0.1-SNAPSHOT.war | grep common-tool
```
만약 `common-tool` 관련 클래스가 누락되었다면 **빌드 과정에서 패키징되지 않은 것**이므로 해결이 필요합니다.  

---

## **2. WAR 파일을 WildFly 배포 디렉토리에서 삭제 후 다시 배포**
### **배포 디렉토리 확인 (`standalone/deployments/`)**
WildFly에서 `.war` 파일이 남아 있으면 충돌할 수 있습니다.  
```sh
rm -rf $WILDFLY_HOME/standalone/deployments/mdms2-0.0.1-SNAPSHOT.war*
```
다시 `mvn package`로 WAR 파일을 빌드하고 WildFly에서 재배포.

---

## **3. `index.xhtml`이 실행되지 않는 이유**
### **1) `web.xml`에서 JSF 서블릿 설정 확인**
`web.xml`이 올바르게 설정되지 않으면 `index.xhtml`이 실행되지 않을 수 있습니다.  

#### ✅ **`WEB-INF/web.xml`에 JSF 설정 추가**
```xml
<servlet>
    <servlet-name>FacesServlet</servlet-name>
    <servlet-class>jakarta.faces.webapp.FacesServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
</servlet>

<servlet-mapping>
    <servlet-name>FacesServlet</servlet-name>
    <url-pattern>*.xhtml</url-pattern>
</servlet-mapping>
```

### **2) `faces-config.xml`이 존재하는지 확인**
JSF 설정 파일이 있어야 정상적으로 실행됩니다.  
✅ `WEB-INF/faces-config.xml` 추가  
```xml
<faces-config xmlns="http://xmlns.jcp.org/xml/ns/javaee"
              version="4.0">
</faces-config>
```

### **3) WildFly에 JSF 모듈이 활성화되었는지 확인**
JSF가 기본 제공되지 않는 경우, `standalone.xml`에서 JSF 서브시스템이 포함되어 있는지 확인해야 합니다.  

`standalone.xml` 확인 (`$WILDFLY_HOME/standalone/configuration/standalone.xml`)  
```xml
<subsystem xmlns="urn:jboss:domain:jsf:2.0">
    <default-jsf-impl-slot>main</default-jsf-impl-slot>
</subsystem>
```
**내장 JSF 사용 시 추가 설정이 필요할 수 있음.**

---

## **4. 로그에서 발생한 에러 메시지 확인**
WildFly 실행 후 발생한 **WAR 파일의 배포 오류 로그**를 확인하면 원인을 찾을 수 있습니다.  
WildFly 로그 파일 확인 (`standalone/log/server.log`)  
```sh
cat $WILDFLY_HOME/standalone/log/server.log | grep ERROR
```
또는 WildFly 콘솔에서 직접 확인하고, 오류 메시지를 기반으로 해결해야 합니다.  

---

## **결론**
1️⃣ `mvn clean package`로 WAR 파일을 정상적으로 생성했는지 확인  
2️⃣ `common-tool` 클래스가 WAR 파일에 포함되었는지 확인 (`jar tf`)  
3️⃣ WildFly 배포 디렉토리에서 기존 `.war` 삭제 후 다시 배포  
4️⃣ `web.xml`에서 `FacesServlet` 매핑 확인 (`*.xhtml`)  
5️⃣ `faces-config.xml`이 존재하는지 확인  
6️⃣ WildFly에서 `standalone.xml`을 수정하여 JSF 서브시스템이 활성화되었는지 확인  
7️⃣ WildFly 로그 (`server.log`)에서 구체적인 오류 메시지 확인  

위 과정을 점검하면 해결할 수 있을 가능성이 높습니다!  
혹시 추가적인 오류 메시지가 있으면 공유해 주세요.
