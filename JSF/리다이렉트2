알겠습니다! `setErrorMessage`가 현행 JavaScript 코드로 수정할 수 없다는 점을 고려해서, **기존 메시지를 지우고 새로운 메시지를 추가하는 방법**을 JavaScript로 해결하는 방식으로 접근하겠습니다.

### 1. **기존 메시지 삭제**
`setErrorMessage` 함수는 그대로 두고, **기존 에러 메시지를 삭제한 후 새로운 메시지를 표시**하는 방법을 아래와 같이 구현할 수 있습니다.

### 수정된 JavaScript 코드:

```javascript
function setMessage() {
    var errormessage = "#{userBean.errormessage}";

    if (errormessage && errormessage.trim() !== "") {
        // 기존 메시지 지우기
        var messageContainer = document.getElementById('messages'); // 'messages'는 h:messages의 id

        if (messageContainer) {
            // 기존 메시지를 모두 삭제
            messageContainer.innerHTML = '';
        }

        // 새로운 메시지를 출력 (기존 setErrorMessage를 사용)
        setErrorMessage(errormessage);

        // 페이지 리렌더링을 방지하기 위해 false 반환
        return false;
    }

    return true; // 메시지가 없으면 true 반환
}
```

### 2. **기존 메시지를 `innerHTML`로 삭제**
- `document.getElementById('messages')`를 통해 `h:messages`에 해당하는 DOM 요소를 선택한 후, `innerHTML = ''`로 그 안의 모든 내용을 삭제합니다.
- 이후 `setErrorMessage`를 호출하여 새 메시지를 추가합니다.

### 3. **`setErrorMessage`는 그대로 사용**
`setErrorMessage`는 그대로 사용하되, **기존 메시지를 먼저 삭제하고 새로운 메시지를 추가하는 흐름**을 유지합니다.

이렇게 하면 **기존의 메시지가 삭제된 후 새로운 메시지가 화면에 표시**되게 됩니다.
