`h:outputText`나 `h:outputLabel`을 사용하지 않고, **순수한 HTML 태그**로 구현할 경우, `label`과 `input` 태그를 사용할 수 있습니다.  

### **✅ 순수 HTML 태그로 라벨과 버튼을 사용**
```xhtml
<label id="selectedUserLabel"></label>

<input type="button" id="registerButton" value="등록" onclick="registerUser()" />
```
위 코드에서:  
- `<label>` 태그를 사용하여 선택된 사용자 정보를 표시  
- `<input type="button">`을 이용해 등록 버튼을 구현  
- JavaScript의 `registerUser()` 함수를 호출하여 유효성 검사 및 등록 처리  

---

### **✅ JavaScript로 값 설정 및 버튼 클릭 이벤트 처리**
```javascript
function setSelectedUser(userId, userName) {
    document.getElementById("selectedUserLabel").textContent = userId + " " + userName;
}

function registerUser() {
    let selectedUser = document.getElementById("selectedUserLabel").textContent;
    
    if (!selectedUser.trim()) {
        alert("사용자를 선택하세요.");
        return;
    }

    // 서버에 등록 요청 보내기 (예제, 실제로는 AJAX 활용)
    console.log("등록 요청: " + selectedUser);
    alert("등록 완료: " + selectedUser);
}
```

---

### **✅ 자식 페이지에서 부모 페이지로 값 전달**  
자식 페이지에서 부모 페이지로 값을 전달할 때는 `window.opener`를 사용하면 됩니다.  

```javascript
function sendUserToParent(userId, userName) {
    if (window.opener) {
        window.opener.setSelectedUser(userId, userName);
        window.close();  // 자식 페이지 닫기
    }
}
```

📌 **결론:**  
- `label` 태그에 JavaScript를 이용해 값을 설정  
- `input type="button"`을 사용해 등록 버튼 구현  
- 부모 페이지와 자식 페이지 간 데이터 전달은 `window.opener` 활용
