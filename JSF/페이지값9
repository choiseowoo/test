`offset` 값이 `0`이 되어서 에러가 발생하는 문제를 해결하는 방법은 여러 가지가 있어요.   
아래 몇 가지 방법을 적용하면 `offset` 오류 없이 정상적인 페이징이 가능해요.  

---

## **🔹 1. `OFFSET` 값이 0 이하가 되지 않도록 제한**  
### **📌 방법: `Math.max()`로 최소값 제한**  
현재 `offset = (currentPage - 1) * pageSize;` 를 계산할 때 `currentPage`가 1보다 작아지면 `offset`이 `0`이 되어서 오류가 발생할 수 있어요.  
➡ **`Math.max(0, offset)`을 사용하면 최소 `0` 이상으로 유지 가능**  

```java
public List<UserDto> getUserList(String orgCode, int currentPage, int pageSize) {
    int offset = Math.max(0, (currentPage - 1) * pageSize); // 최소 0 유지
    return userMapper.searchUsers(orgCode, pageSize, offset);
}
```
✅ **`Math.max(0, offset)`** → `offset`이 `0` 이하로 내려가는 것을 방지  

---

## **🔹 2. `currentPage` 값 제한 (1 이상 유지)**  
현재 페이지 번호가 `1`보다 작아지면 **자동으로 `1`로 변경**하면 `offset`이 음수가 되지 않아요.  

```java
public void changePage(String pattern) {
    if ("1".equals(pattern)) { // 맨앞 (1페이지로 고정)
        currentPage = 1;
    } else if ("-1".equals(pattern)) { // 앞 (최소 1 유지)
        currentPage = Math.max(1, currentPage - 1);
    } else if ("+1".equals(pattern)) { // 뒤 (최대 totalPages 제한)
        currentPage = Math.min(totalPages, currentPage + 1);
    } else if ("0".equals(pattern)) { // 맨뒤
        currentPage = totalPages;
    }
    loadUsers();
}
```
✅ **`Math.max(1, currentPage - 1)`** → 페이지 최소값 유지  
✅ **`Math.min(totalPages, currentPage + 1)`** → 페이지 최대값 유지  

---

## **🔹 3. `totalPages`를 초과할 때 예외 처리**  
현재 페이지가 전체 페이지 수를 초과하면 `offset` 오류가 발생할 수 있어요.  
➡ **현재 페이지가 `totalPages`보다 크면 `totalPages`로 강제 설정**  

```java
public void loadUsers() {
    totalRecords = userService.getTotalUserCount("ORG001");
    totalPages = (int) Math.ceil((double) totalRecords / pageSize);

    // 현재 페이지가 전체 페이지 수를 초과하면 마지막 페이지로 설정
    if (currentPage > totalPages) {
        currentPage = totalPages;
    }
    users = userService.getUserList("ORG001", currentPage, pageSize);
}
```
✅ **현재 페이지가 `totalPages`보다 크면 마지막 페이지로 조정**  
✅ **마지막 페이지에서 "다음 페이지" 클릭해도 `offset` 에러 발생 안 함**  

---

## **🔹 4. `맨뒤` 버튼(`0` 값)의 문제 해결**  
현재 **맨뒤 버튼을 누르면 `0`이 되어서 offset 오류가 발생하는 문제**가 있어요.  
➡ **맨뒤 버튼(`0` 값)이 들어오면 `currentPage = totalPages`로 설정**  

```java
public void changePage(String pattern) {
    if ("1".equals(pattern)) { // 맨앞 (1페이지로 고정)
        currentPage = 1;
    } else if ("-1".equals(pattern)) { // 앞 (최소 1 유지)
        currentPage = Math.max(1, currentPage - 1);
    } else if ("+1".equals(pattern)) { // 뒤 (최대 totalPages 제한)
        currentPage = Math.min(totalPages, currentPage + 1);
    } else if ("0".equals(pattern)) { // 맨뒤 (totalPages로 설정)
        currentPage = totalPages > 0 ? totalPages : 1;
    }
    loadUsers();
}
```
✅ **맨뒤 버튼(`0` 값) 입력 시 `totalPages`로 설정 → offset 오류 방지**  
✅ **데이터가 없을 경우 `currentPage = 1`로 설정 → 안전한 페이징 가능**  

---

## **🔹 결론: 가장 좋은 해결 방법**  
**✔ `offset` 값을 `Math.max(0, offset)`으로 최소 0 이상 유지**  
**✔ `currentPage`가 1보다 작거나 `totalPages`보다 크지 않도록 제한**  
**✔ 맨뒤 버튼(`0` 값)이 들어오면 `totalPages`로 설정**  

➡ 이렇게 하면 **offset이 0이 되어 발생하는 에러를 방지하고, 안전한 페이징이 가능해요!**
