맞습니다. 자바스크립트에서 URL에 값을 넘기는 것은 단순히 **URL 파라미터로 값을 전송하는 것**에 불과하며, **세션에 값이 자동으로 저장되지 않습니다**.

### 자바스크립트에서 URL 파라미터 보내는 경우:
```javascript
window.location.href = "xxxx1.xhtml?sessionData=test&userId=testid";
```

위 코드처럼 URL 파라미터로 값을 보내면, 해당 값들은 `xxxx1.xhtml` 페이지의 요청 파라미터로 전달됩니다. 그러나 이 값들이 **세션에 자동으로 저장되지 않습니다**.

### 세션에 값을 저장하려면:
URL 파라미터로 전달된 값은 서버 측에서 **명시적으로 세션에 저장해야** 합니다. 예를 들어, JSF 페이지에서 `f:viewParam`을 사용해 값을 받을 수 있지만, 그 값을 세션에 저장하려면 서버 측 코드에서 세션에 **명시적으로 설정**해줘야 합니다.

### 예시:

1. **URL에서 파라미터를 받아서 세션에 저장하는 방법 (JSF에서)**:

```xml
<f:metadata>
    <f:viewParam name="sessionData" value="#{sessionBean.sessionData}" />
    <f:viewParam name="userId" value="#{sessionBean.userId}" />
    <f:event type="preRenderView" listener="#{sessionBean.saveToSession}" />
</f:metadata>
```

2. **`sessionBean`에서 세션에 저장하는 방법**:

```java
@ManagedBean
@SessionScoped
public class SessionBean {
    private String sessionData;
    private String userId;

    // Getter and Setter for sessionData and userId

    public void saveToSession() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        HttpSession session = (HttpSession) facesContext.getExternalContext().getSession(true);

        // 세션에 값을 저장
        session.setAttribute("sessionData", this.sessionData);
        session.setAttribute("userId", this.userId);
    }
}
```

이렇게 해야 **자바스크립트에서 URL 파라미터로 넘긴 값**을 **세션에 저장**할 수 있습니다.

### 결론:
- URL 파라미터는 **단순히 값을 넘기는 것**일 뿐, **자동으로 세션에 저장되지 않습니다**.
- 서버 측에서 파라미터 값을 받아서 **세션에 명시적으로 저장해야** 합니다.
