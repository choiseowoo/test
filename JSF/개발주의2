### **📌 "DB 사용 금지"가 MyBatis에서 의미하는 것**  

세션 관리에서 **DB 사용 금지**라는 지침이 있을 때, MyBatis에서 다음 두 가지 해석이 가능해:  

1. **SQL을 직접 작성해서 세션을 관리하는 로직을 만들지 말라는 의미**  
2. **DB 접속 시 `SqlSession`을 사용해 세션 데이터를 조회하거나 저장하지 말라는 의미**  

---

## **✅ 1️⃣ MyBatis의 `mapping.xml`에서 SQL 작성 금지인가?**  
➡ ❌ **그렇지는 않아!**  
➡ **일반적인 CRUD 쿼리는 작성해도 문제없음**  
✔ 즉, **사용자 정보, 권한 조회 등을 위한 쿼리는 허용됨**  
✔ 하지만 **세션을 DB에서 관리하는 SQL(예: 세션 ID 저장 등)은 금지**  

🚫 **금지되는 예시 (`mapping.xml`에서 세션을 DB에 저장)**  
```xml
<insert id="saveSession">
    INSERT INTO session_table (session_id, user_id, last_access_time)
    VALUES (#{sessionId}, #{userId}, NOW());
</insert>
```
✔ **이렇게 DB를 세션 저장소처럼 활용하는 방식은 금지됨**  

---

## **✅ 2️⃣ `SqlSession`을 이용한 세션 데이터 관리 금지인가?**  
➡ **그렇다고 볼 수 있음!**  
➡ 즉, **세션을 `SqlSession`을 이용해서 조회/저장하는 방식은 사용 불가**  

🚫 **금지되는 예시 (`SqlSession`을 사용하여 세션 정보 저장)**  
```java
SqlSession session = sqlSessionFactory.openSession();
session.insert("saveSession", sessionData);
session.commit();
session.close();
```
✔ **이런 방식으로 MyBatis를 이용해 세션을 DB에 저장하는 것은 불가능**  

---

## **✅ 3️⃣ MyBatis에서 일반적인 DB 조회는 가능**  
✔ **일반적인 DB 조회나 CRUD 작업은 허용됨**  
✔ 하지만 **세션 데이터를 저장하거나, 세션 관리 목적으로 MyBatis를 활용하는 것은 금지**  

✅ **허용되는 예시 (`userMapper.xml`에서 사용자 조회)**  
```xml
<select id="findUserById" resultType="User">
    SELECT * FROM users WHERE user_id = #{userId}
</select>
```
✅ **허용되는 예시 (`MyBatis`로 사용자 정보 조회)**  
```java
User user = sqlSession.selectOne("findUserById", userId);
```
✔ **이런 식으로 일반적인 CRUD 작업은 가능!**  

---

## **✅ 결론 및 정리**  
1. **DB에서 세션을 관리하는 SQL을 작성하지 말라는 의미!**  
   - `session_table` 같은 테이블을 만들어서 세션을 저장하는 것은 ❌ 금지  
   - 세션을 DB에 저장하는 `INSERT`, `UPDATE` 문은 ❌ 사용 금지  

2. **`SqlSession`을 이용해 세션 데이터를 저장하거나 조회하지 말라는 의미!**  
   - `SqlSession`을 이용해서 세션을 DB에서 가져오거나 저장하는 것은 ❌ 사용 금지  

3. **일반적인 DB 조회 (`SELECT` 등)는 가능!**  
   - 사용자 정보 조회, 권한 조회 등의 일반적인 CRUD는 ⭕ 허용됨  

💡 **즉, DB를 세션 관리용으로 사용하지 말고, 세션은 JSF의 `@SessionScoped` 등을 이용해서 서버 메모리에서 유지해야 함!**
