# HTML 모달 구현: 부모 페이지 차단 (Modal Overlay)

아래는 HTML 파일을 모달 형태로 표시하고, 모달이 열려 있을 때 부모 페이지를 완전히 차단하는 완벽한 솔루션입니다.

## 완성 코드 (Vanilla JS)

```html
<!DOCTYPE html>
<html>
<head>
  <style>
    /* 모달 오버레이 - 부모 페이지 차단 */
    .modal-overlay {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: rgba(0, 0, 0, 0.7);
      z-index: 1000;
      display: flex;
      justify-content: center;
      align-items: center;
    }
    
    /* 모달 컨테이너 */
    .modal-container {
      background-color: white;
      width: 80%;
      max-width: 800px;
      height: 80%;
      border-radius: 8px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
      display: flex;
      flex-direction: column;
    }
    
    /* 모달 iframe (자식 페이지 표시 영역) */
    .modal-iframe {
      flex-grow: 1;
      border: none;
      border-radius: 0 0 8px 8px;
    }
    
    /* 모달 헤더 */
    .modal-header {
      padding: 16px;
      border-bottom: 1px solid #eee;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    
    /* 닫기 버튼 */
    .close-btn {
      background: none;
      border: none;
      font-size: 24px;
      cursor: pointer;
      padding: 0 8px;
    }
    
    /* 부모 페이지 차단 효과 */
    body.modal-open {
      overflow: hidden;
    }
  </style>
</head>
<body>
  <button onclick="openModal('child.html')">모달 열기</button>
  <p>부모 페이지 내용... (모달 열리면 클릭 불가)</p>
  
  <script>
    function openModal(url) {
      // 부모 페이지 스크롤 막기
      document.body.classList.add('modal-open');
      
      // 모달 오버레이 생성
      const overlay = document.createElement('div');
      overlay.className = 'modal-overlay';
      
      // 모달 컨테이너 생성
      const modal = document.createElement('div');
      modal.className = 'modal-container';
      
      // 모달 헤더 생성
      const header = document.createElement('div');
      header.className = 'modal-header';
      header.innerHTML = '<h3>모달 제목</h3>';
      
      // 닫기 버튼 생성
      const closeBtn = document.createElement('button');
      closeBtn.className = 'close-btn';
      closeBtn.innerHTML = '&times;';
      closeBtn.onclick = closeModal;
      
      // iframe 생성 (자식 페이지 로드)
      const iframe = document.createElement('iframe');
      iframe.className = 'modal-iframe';
      iframe.src = url;
      
      // 조립
      header.appendChild(closeBtn);
      modal.appendChild(header);
      modal.appendChild(iframe);
      overlay.appendChild(modal);
      document.body.appendChild(overlay);
      
      // ESC 키로 닫기
      overlay.tabIndex = 0;
      overlay.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') closeModal();
      });
      overlay.focus();
      
      // 오버레이 클릭 시 닫기 (옵션)
      overlay.addEventListener('click', function(e) {
        if (e.target === overlay) closeModal();
      });
      
      function closeModal() {
        document.body.classList.remove('modal-open');
        document.body.removeChild(overlay);
      }
      
      // 모달 닫기 함수 외부 노출
      window.currentModal = { close: closeModal };
    }
  </script>
</body>
</html>
```

## 주요 기능 설명

1. **부모 페이지 완전 차단**
   - `position: fixed`로 전체 화면을 덮는 오버레이 생성
   - `body.modal-open` 클래스 추가로 스크롤 막기
   - 오버레이가 모든 클릭 이벤트를 차단

2. **자식 페이지 표시**
   - iframe을 사용해 외부 HTML 파일 로드
   - iframe 내부에서는 원본 HTML이 그대로 작동

3. **사용자 경험 향상**
   - ESC 키로 모달 닫기
   - 외부 클릭 시 닫기 (옵션)
   - 애니메이션 추가 가능 (CSS transitions)

4. **반응형 디자인**
   - 모달 크기가 화면에 맞게 자동 조정
   - 모바일 친화적

## 추가 기능 구현 팁

1. **모달에서 모달 열기**
```javascript
// 자식 페이지에서 부모 모달 제어
window.parent.currentModal.close();
```

2. **데이터 전달**
```javascript
// 부모 → 자식
iframe.contentWindow.postMessage(data, '*');

// 자식 → 부모
window.parent.postMessage(data, '*');
```

3. **애니메이션 추가**
```css
.modal-overlay {
  opacity: 0;
  transition: opacity 0.3s ease;
}

.modal-overlay.show {
  opacity: 1;
}
```

이 코드는 모든 최신 브라우저에서 작동하며, jQuery나 다른 라이브러리 없이 순수 JavaScript로 구현되었습니다. 필요에 따라 스타일을 수정하거나 기능을 확장할 수 있습니다.
