Eclipse에서 `pom.xml`을 수정하지 않고 **프로젝트의 빌드 경로(Build Path)에서 직접 `common-tool` 프로젝트를 `User` 프로젝트에 의존성으로 추가하는 방법**이 있습니다.  

---

## **방법 1: Eclipse에서 프로젝트 의존성 추가 (Build Path 설정)**  
Eclipse에서 `User` 프로젝트가 `common-tool` 프로젝트를 참조하도록 설정하는 방법입니다.  

### **단계별 설정 방법**  
1. **Eclipse에서 `User` 프로젝트를 우클릭 → `Properties` 선택**  
2. **좌측 메뉴에서 `Java Build Path` 클릭**  
3. `Projects` 탭에서 **`Add...` 버튼 클릭**  
4. `common-tool` 프로젝트를 선택 후 **확인(OK)**  
5. `Apply and Close` 클릭하여 저장  

✅ **이렇게 하면 `common-tool` 프로젝트의 클래스와 리소스를 `User` 프로젝트에서 참조할 수 있음**  

---

## **방법 2: Eclipse에서 Maven 프로젝트 의존성 추가 (Project References 설정)**  
Maven 프로젝트라면 **`Project References`** 설정을 추가하여 `common-tool` 프로젝트를 `User` 프로젝트의 빌드 과정에서 참조하게 만들 수도 있습니다.  

### **설정 방법**  
1. **Eclipse에서 `User` 프로젝트를 우클릭 → `Properties` 선택**  
2. **좌측 메뉴에서 `Project References` 클릭**  
3. `common-tool` 프로젝트에 체크  
4. `Apply and Close` 클릭  

✅ **이 설정을 하면 Eclipse 내부에서 `common-tool`을 빌드할 때 `User` 프로젝트에서도 참조 가능**  

---

## **방법 3: Eclipse에서 `Deployment Assembly` 설정 (Web 프로젝트의 경우)**  
만약 **Web 프로젝트(WAR 프로젝트)** 라면, `Deployment Assembly`를 통해 `common-tool` 프로젝트의 클래스를 포함할 수 있습니다.  

### **설정 방법**  
1. **Eclipse에서 `User` 프로젝트를 우클릭 → `Properties` 선택**  
2. **좌측 메뉴에서 `Deployment Assembly` 클릭**  
3. **`Add...` 버튼 클릭**  
4. **`Project` 선택 후 `Next` 클릭**  
5. `common-tool` 선택 후 `Finish`  
6. `Apply and Close` 클릭  

✅ **이렇게 하면 `User` 프로젝트를 배포할 때 `common-tool`의 클래스도 포함됨**  

---

## **결론: 어떤 방법을 선택할까?**
| 방법 | 사용 목적 | 장점 | 단점 |
|------|----------|------|------|
| **방법 1: Java Build Path** | 개발 중 참조 | 간단하게 코드 참조 가능 | 배포 시 자동 포함 안 됨 |
| **방법 2: Project References** | Eclipse 내에서 빌드 | Eclipse 빌드 시 의존성 해결 | Maven 빌드에는 영향 없음 |
| **방법 3: Deployment Assembly** | Web 프로젝트 (WAR) | 배포 시 포함 가능 | Maven과 독립적 |

**➡ 가장 일반적인 방법은 `Java Build Path` 설정**  
**➡ Web 프로젝트라면 `Deployment Assembly`를 추가해야 배포 가능**  
**➡ Maven과 무관하게 Eclipse 내에서만 참조하려면 `Project References` 설정**  

어떤 방법을 선택할지는 **프로젝트 빌드 방식(Maven or Eclipse)** 에 따라 결정하면 됩니다!
