다른 프로젝트의 클래스를 가져오려고 할 때 패키지 구조가 다르면 Eclipse에서 클래스를 인식하지 못하는 문제가 발생합니다.  
현재 문제는 **패키지 선언과 실제 프로젝트 내 위치가 불일치**하는 것으로 보입니다.  

---

## **해결 방법**  

### **1. 패키지 구조 확인 및 정리**  
먼저 `Stringutil` 클래스가 있는 프로젝트에서 실제 패키지 구조를 확인하세요.  

- **올바른 패키지 구조 예시:**  
  ```
  ├── src
  │   ├── jo
  │   │   ├── co
  │   │   │   ├── test
  │   │   │   │   ├── common
  │   │   │   │   │   ├── Stringutil.java
  ```
  이 경우, `Stringutil.java` 파일의 첫 번째 줄이 **`package jo.co.test.common;`** 이면 정상입니다.  

- 하지만, 실제 패키지 구조가 아래처럼 되어 있으면 문제가 발생합니다.
  ```
  ├── src
  │   ├── main
  │   │   ├── systemname
  │   │   │   ├── jo
  │   │   │   │   ├── co
  │   │   │   │   │   ├── test
  │   │   │   │   │   │   ├── common
  │   │   │   │   │   │   │   ├── Stringutil.java
  ```
  만약 실제 폴더 위치가 **`main/systemname/jo/co/test/common/Stringutil.java`** 라면,  
  **패키지 선언도 아래처럼 변경해야 합니다.**
  ```java
  package main.systemname.jo.co.test.common;
  ```

### **2. Import 문 수정**  
현재 프로젝트에서 `Stringutil`을 사용하려면, import 문을 **패키지 선언에 맞게 수정**해야 합니다.  
```java
import main.systemname.jo.co.test.common.Stringutil;
```
Eclipse에서 `Ctrl + Shift + O` (자동 import 정리)도 시도해 보세요.  

---

### **3. 프로젝트 `Build Path` 설정 확인**  
패키지 구조가 맞는데도 클래스 인식이 안 된다면, **프로젝트의 Build Path 설정**을 확인해야 합니다.

1. **프로젝트의 `Properties` (속성) 창을 엽니다.**  
   - Eclipse에서 해당 프로젝트를 선택 → `마우스 오른쪽 클릭` → `Properties`
   
2. **Java Build Path 설정을 확인합니다.**  
   - 왼쪽 메뉴에서 `Java Build Path` → `Projects` 탭에서 **다른 프로젝트가 포함되어 있는지 확인**
   - 포함되어 있지 않다면 **"Add Projects..."** 버튼을 눌러 필요한 프로젝트를 추가  

3. **JAR 파일로 추가해야 하는 경우**  
   - `Stringutil`이 있는 프로젝트를 JAR 파일로 export한 후,  
   - 사용하는 프로젝트에서 `Java Build Path` → `Libraries` → `Add External JARs...`로 추가  

---

### **4. 패키지 구조를 수정할 수 없는 경우 (`Stringutil`을 래핑하여 사용)**  
만약 패키지 구조를 수정할 수 없다면, **별도의 Helper 클래스를 만들어서 해결**할 수도 있습니다.  

```java
package main.systemname.utils;

import jo.co.test.common.Stringutil;

public class StringUtilHelper {
    public static String toUpperCase(String input) {
        return Stringutil.toUpperCase(input);
    }
}
```
이제 다른 프로젝트에서는 `StringUtilHelper.toUpperCase("test")`처럼 사용하면 됩니다.  

---

## **결론**
1. **패키지 선언과 실제 위치를 맞추기** (`package main.systemname.jo.co.test.common;`)
2. **import 문 수정** (`import main.systemname.jo.co.test.common.Stringutil;`)
3. **Eclipse `Java Build Path`에서 프로젝트 의존성 추가**
4. **JAR 파일로 추가하거나, 별도 Helper 클래스를 만들기** (패키지 수정이 불가능할 경우)

위 방법을 적용하면 클래스 파일을 정상적으로 가져올 수 있을 것입니다.
