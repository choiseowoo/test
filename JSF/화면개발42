네, `UserMapper.xml`에서 부분 검색과 전체 검색이 모두 처리되도록 되어 있습니다.  
아래에서 다시 확인해 보면:  

---

### **✅ 검색 로직**
1. **검색 조건이 없을 때 (`NULL` 또는 빈 값일 때)**  
   - `WHERE` 조건이 항상 `TRUE`가 되어 **모든 데이터가 조회**됨.  
2. **검색 조건이 있을 때**  
   - 입력된 조건에 따라 `LIKE` 또는 `=` 연산자로 필터링됨.  

---

### **🔹 `UserMapper.xml` (MyBatis SQL)**  
```xml
<select id="countUsers" parameterType="map" resultType="int">
    SELECT COUNT(*) 
    FROM users 
    WHERE 
        (#{organization} IS NULL OR #{organization} = '' OR organization = #{organization}) AND
        (#{userName} IS NULL OR #{userName} = '' OR name LIKE CONCAT('%', #{userName}, '%')) AND
        (#{userCode} IS NULL OR #{userCode} = '' OR code LIKE CONCAT('%', #{userCode}, '%')) AND
        (#{userEmail} IS NULL OR #{userEmail} = '' OR email LIKE CONCAT('%', #{userEmail}, '%'))
</select>

<select id="getUsers" parameterType="map" resultType="User">
    SELECT * 
    FROM users 
    WHERE 
        (#{organization} IS NULL OR #{organization} = '' OR organization = #{organization}) AND
        (#{userName} IS NULL OR #{userName} = '' OR name LIKE CONCAT('%', #{userName}, '%')) AND
        (#{userCode} IS NULL OR #{userCode} = '' OR code LIKE CONCAT('%', #{userCode}, '%')) AND
        (#{userEmail} IS NULL OR #{userEmail} = '' OR email LIKE CONCAT('%', #{userEmail}, '%'))
    LIMIT #{offset}, #{limit}
</select>
```

---

### **✅ 어떻게 동작하는가?**
1. **검색 조건이 없을 때:**  
   - `(#{organization} IS NULL OR #{organization} = '')`  
   - 모든 조건이 `TRUE`가 되어 전체 데이터를 가져옴.  

2. **검색 조건이 있을 때:**  
   - 예를 들어, `userName = '홍길동'`을 입력하면 →  
     - `name LIKE '%홍길동%'`으로 부분 검색됨.  
   - `userCode = '001'`을 입력하면 →  
     - `code = '001'`로 정확한 검색됨.  

3. **페이징 처리 (`LIMIT #{offset}, #{limit}`)**  
   - `offset` → 현재 페이지의 첫 번째 데이터 위치  
   - `limit` → 한 페이지에서 가져올 데이터 개수  

---

### **✅ 결론**
✔ **전체 검색 (검색 조건 없이 검색 버튼 클릭) → 모든 데이터 조회**  
✔ **부분 검색 (이름, 코드, 이메일 일부 입력) → 해당 조건에 맞는 데이터만 조회**  
✔ **페이징 (`LIMIT`) 적용 → 성능 최적화**  

이제 **검색 기능과 페이징이 함께 동작**할 것입니다! 🚀
