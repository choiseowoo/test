네, 다른 방법으로는 PowerShell을 주로 사용하여 데이터베이스에서 데이터를 추출하고 CSV 파일을 생성한 후 이메일을 보내는 방법이 있습니다. PowerShell을 이용하면 배치 파일과 SQL*Plus를 사용하는 대신 전체 과정을 PowerShell 스크립트 하나로 처리할 수 있습니다. 

### 1. PowerShell 스크립트 작성

다음 PowerShell 스크립트는 데이터베이스에서 데이터를 추출하고, CSV 파일로 저장한 후 이메일을 전송합니다.

```powershell
param (
    [string]$dbUser = "your_db_user",
    [string]$dbPass = "your_db_password",
    [string]$dbHost = "your_db_host",
    [string]$dbSid = "your_db_sid"
)

# 사용자 목록을 가져오는 SQL 쿼리
$userListQuery = @"
SET HEADING OFF;
SET FEEDBACK OFF;
SET PAGESIZE 0;
SELECT DISTINCT username
FROM installed_software
WHERE software_name IN ('SoftwareA', 'SoftwareB', 'SoftwareC');
EXIT;
"@

# 사용자 목록을 임시 파일에 저장
$userListFile = "$env:TEMP\user_list.txt"
$sqlPlusPath = "C:\path\to\sqlplus.exe"

& $sqlPlusPath -S "$dbUser/$dbPass@$dbHost/$dbSid" @($userListQuery) > $userListFile

# 각 사용자에 대해 금지 소프트웨어 목록을 CSV 파일로 저장하고 이메일 전송
$usernames = Get-Content -Path $userListFile
foreach ($username in $usernames) {
    $csvFile = "$env:TEMP\$username.csv"
    $softwareListQuery = @"
SET HEADING OFF;
SET FEEDBACK OFF;
SET COLSEP ',';
SET PAGESIZE 0;
SPOOL $csvFile;
SELECT software_name 
FROM installed_software 
WHERE username='$username' 
AND software_name IN ('SoftwareA', 'SoftwareB', 'SoftwareC');
SPOOL OFF;
EXIT;
"@
    & $sqlPlusPath -S "$dbUser/$dbPass@$dbHost/$dbSid" @($softwareListQuery)

    # 이메일 설정
    $smtpServer = "smtp.your_email_server.com"
    $smtpFrom = "your_email@example.com"
    $smtpTo = "$username@example.com"
    $messageSubject = "Prohibited Software Installed on Your PC"
    $messageBody = "Dear $username,`n`nPlease find the attached CSV file containing the list of prohibited software installed on your PC.`n`nBest regards,`nIT Department"

    # 이메일 작성
    $message = New-Object System.Net.Mail.MailMessage
    $message.From = $smtpFrom
    $message.To.Add($smtpTo)
    $message.Subject = $messageSubject
    $message.Body = $messageBody
    $attachment = New-Object System.Net.Mail.Attachment($csvFile)
    $message.Attachments.Add($attachment)

    # SMTP 클라이언트 설정 및 이메일 발송
    $smtp = New-Object Net.Mail.SmtpClient($smtpServer)
    $smtp.Send($message)

    # 첨부 파일 객체 해제
    $attachment.Dispose()
}

# 임시 파일 삭제
Remove-Item -Path $userListFile
```

### 사용 방법

1. **PowerShell 스크립트 작성**: 위의 내용을 PowerShell 스크립트 파일 (`send_prohibited_software_reports.ps1`)로 저장합니다.
2. **SQL*Plus 경로 수정**: `sqlPlusPath` 변수에 SQL*Plus 실행 파일의 경로를 설정합니다.
3. **PowerShell 스크립트 실행**: PowerShell에서 스크립트를 실행합니다. 예를 들어, 다음과 같이 실행할 수 있습니다:

```powershell
powershell -ExecutionPolicy Bypass -File send_prohibited_software_reports.ps1
```

이 방법은 전체 과정을 하나의 PowerShell 스크립트로 처리하며, 데이터베이스에서 사용자와 금지 소프트웨어 목록을 조회하여 CSV 파일로 저장하고 이메일로 전송하는 작업을 간결하게 수행할 수 있습니다. 필요한 경우 데이터베이스 접속 정보와 SMTP 서버 정보를 적절히 수정하여 사용하세요.
