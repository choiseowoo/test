`Objecttable`에서 `Object` 타입으로 저장된 데이터를 `HashMap<Long, String>`으로 변환하려면, 먼저 `Object`에서 적절한 타입으로 변환하고, 이를 `HashMap`에 저장해야 합니다.

다음은 `Objecttable`에서 데이터를 `HashMap<Long, String>`으로 변환하는 예제 코드입니다:

### 데이터 변환 및 CSV 출력 예제

```java
import java.io.FileWriter;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class Example {
    public static void main(String[] args) {
        // Sample data in Objecttable
        Object objectTable = logdata.get(); // 이 부분은 실제 데이터로 대체

        Map<Long, String> codeMap = new HashMap<>();

        if (objectTable instanceof List) {
            List<?> tableList = (List<?>) objectTable;
            for (Object item : tableList) {
                if (item instanceof Map) {
                    Map<?, ?> entryMap = (Map<?, ?>) item;

                    // Assuming the keys are "key" and "value" in the map
                    Object keyObj = entryMap.get("key");
                    Object valueObj = entryMap.get("value");

                    if (keyObj instanceof Long && valueObj instanceof String) {
                        Long key = (Long) keyObj;
                        String value = (String) valueObj;
                        codeMap.put(key, value);
                    } else {
                        System.err.println("Invalid entry in map: " + entryMap);
                    }
                }
            }
        } else {
            System.err.println("Object is not an instance of List");
        }

        // Write to CSV
        try (FileWriter fileWriter = new FileWriter("output.csv")) {
            fileWriter.append("Code,Description\n");

            for (Map.Entry<Long, String> entry : codeMap.entrySet()) {
                fileWriter.append(entry.getKey().toString()).append(',')
                          .append(entry.getValue()).append('\n');
            }

            System.out.println("Data exported to CSV file successfully.");

        } catch (IOException e) {
            e.printStackTrace(); // 실제 애플리케이션에서는 로깅을 사용하세요
        }
    }
}
```

### 요약

1. **데이터 변환**: `Objecttable`에서 `List`와 `Map`을 통해 `Long`과 `String` 쌍으로 변환합니다.
2. **CSV 파일 출력**: 변환된 `HashMap`을 CSV 파일로 출력합니다.

위 코드는 `Objecttable`이 `List`와 `Map` 구조로 되어 있다고 가정하고, `key`와 `value`로 각각 `Long`과 `String` 데이터를 처리합니다. 실제 데이터 구조에 따라 `key`와 `value`의 접근 방식은 달라질 수 있습니다.
