Java에서 Windows 레지스트리 값을 가져오기 위해서는 Java 자체로는 직접적인 API가 없기 때문에, 다음과 같은 방법들을 사용할 수 있습니다:

### 1. **`JNA` (Java Native Access) 라이브러리 사용**
JNA는 Java에서 네이티브 라이브러리와 쉽게 상호작용할 수 있도록 도와주는 라이브러리입니다. 이를 사용해 Windows API를 호출하여 레지스트리 값을 읽을 수 있습니다.

### 2. **`Process`와 `reg query` 명령어 사용**
`ProcessBuilder` 또는 `Runtime.getRuntime().exec()`를 사용하여 Windows의 `reg query` 명령어를 실행하고, 그 출력을 읽어 레지스트리 값을 가져오는 방법입니다.

### 3. **`JACOB` (Java COM Bridge) 사용**
`JACOB`은 Java와 Windows COM 객체를 연결해주는 라이브러리입니다. 이를 통해 Windows 레지스트리에 접근할 수 있습니다.

### 4. **`JNI` (Java Native Interface) 사용**
C/C++로 직접 레지스트리 관련 코드를 작성하고, 이를 JNI를 통해 Java에서 호출하는 방법입니다. 하지만 이 방법은 복잡하며, 유지보수가 어렵기 때문에 권장되지 않습니다.

#### 예제: `reg query` 명령어 사용

아래는 `Process`를 사용하여 `reg query` 명령어로 레지스트리 값을 가져오는 간단한 예제입니다:

```java
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class RegistryReader {

    public static String readRegistry(String location, String key) {
        try {
            // 명령어를 실행하여 결과를 읽기 위해 프로세스 생성
            Process process = Runtime.getRuntime().exec("reg query " + '"' + location + "\" /v " + key);
            BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));
            String line;
            while ((line = reader.readLine()) != null) {
                if (line.contains(key)) {
                    // 레지스트리 값이 있는 줄을 찾으면 그 값을 파싱하여 반환
                    String[] parts = line.split("\\s+");
                    if (parts.length >= 3) {
                        return parts[parts.length - 1];
                    }
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return null;
    }

    public static void main(String[] args) {
        String location = "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion";
        String key = "ProgramFilesDir";
        
        String value = readRegistry(location, key);
        System.out.println("Registry Key Value: " + value);
    }
}
```

#### 설명:
- **`reg query` 명령어**: Windows 명령 프롬프트에서 레지스트리 값을 조회하는 데 사용됩니다.
- **프로세스 생성 및 결과 읽기**: `Runtime.getRuntime().exec()` 또는 `ProcessBuilder`를 사용하여 명령어를 실행하고, 그 출력을 읽습니다.
- **출력 파싱**: 출력에서 원하는 레지스트리 값을 추출합니다.

이 방법은 간단하지만, 명령어를 실행할 때마다 새로운 프로세스를 생성하므로 성능상 제약이 있을 수 있습니다. 고성능이 필요한 경우 JNA 같은 네이티브 접근 방식을 고려하는 것이 좋습니다.
